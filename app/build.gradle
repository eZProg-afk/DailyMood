plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
    id("kotlin-parcelize")
    id("dagger.hilt.android.plugin")
    id("androidx.navigation.safeargs")
    id("com.google.gms.google-services")
    id("com.google.firebase.crashlytics")
}

android {

    defaultConfig {
        applicationId "spiral.bit.dev.dailymood"
        minSdk rootProject.appMinSdkVersion
        compileSdk rootProject.appCompileSdkVersion
        targetSdk rootProject.appTargetSdkVersion
        versionCode rootProject.appVersionCode
        versionName rootProject.appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    viewBinding.enabled true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // Fast Adapter
    implementation("com.mikepenz:fastadapter:${fastAdapterVersion}")
    implementation("com.mikepenz:fastadapter-extensions-binding:${fastAdapterVersion}")
    implementation("com.mikepenz:fastadapter-extensions-diff:${fastAdapterVersion}")
    implementation("com.mikepenz:fastadapter-extensions-drag:${fastAdapterVersion}")
    implementation("com.mikepenz:fastadapter-extensions-scroll:${fastAdapterVersion}")
    implementation("com.mikepenz:fastadapter-extensions-swipe:${fastAdapterVersion}")
    implementation("com.mikepenz:fastadapter-extensions-utils:${fastAdapterVersion}")
    implementation("com.google.android.material:material:${materialVersion}")

    //TODO УБРАТЬ ИЛИ УЗНАТЬ ЧТО ЭТО
    implementation "androidx.startup:startup-runtime:1.1.0"

    // Voice emotion recognition
    implementation("com.github.alshell7:VokaturiAndroid:${vokaturiVersion}")

    // Photo emotion recognition
    implementation("com.google.mlkit:face-detection:${faceDetectionMlKitVersion}")
    implementation("com.google.android.gms:play-services-mlkit-face-detection:${playServicesFaceDetectionVersion}")

    // Iconics
    implementation("com.mikepenz:iconics-core:${iconicsVersion}")
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.8-kotlin@aar'

    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesCoreVersion}")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesAndroidVersion}")

    // Architecture (OrbitMVI)
    implementation("org.orbit-mvi:orbit-viewmodel:${orbitVersion}")
    implementation("org.orbit-mvi:orbit-core:${orbitVersion}")

    // UI
    implementation("androidx.appcompat:appcompat:${appCompatVersion}")
    implementation("com.google.android.material:material:${materialVersion}")
    implementation("androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}")
    implementation("com.github.Egor-Blagochinnov:Validation:${textValidationVersion}")
    implementation("com.github.kizitonwose:CalendarView:${calendarVersion}")
    implementation("com.kirich1409.viewbindingpropertydelegate:viewbindingpropertydelegate:${viewBindingVersion}")
    implementation("com.github.sujithkanna:smileyrating:${smileyRatingVersion}")
    implementation("androidx.camera:camera-camera2:$cameraxVersion")
    implementation("androidx.camera:camera-lifecycle:$cameraxVersion")
    implementation("androidx.camera:camera-view:${cameraViewVersion}")

    // Hilt
    implementation("com.google.dagger:hilt-android:${hiltVersion}")
    implementation("androidx.hilt:hilt-lifecycle-viewmodel:${hiltViewModelVersion}")
    implementation("androidx.hilt:hilt-navigation-fragment:${hiltFragmentNavigationVersion}")
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt("com.google.dagger:hilt-android-compiler:${hiltVersion}")
    kapt("androidx.hilt:hilt-compiler:${hiltCompilerVersion}")

    // Room
    implementation("androidx.room:room-runtime:${roomVersion}")
    implementation("androidx.room:room-ktx:${roomVersion}")
    kapt("androidx.room:room-compiler:${roomVersion}")

    // Navigation
    implementation("androidx.navigation:navigation-fragment-ktx:${navigationKtxVersion}")
    implementation("androidx.navigation:navigation-ui-ktx:${navigationVersion}")

    // Lifecycle
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:${lifecycleKtxVersion}")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleKtxVersion}")

    // Ktx's
    implementation("androidx.activity:activity-ktx:${activityKtxVersion}")
    implementation("androidx.fragment:fragment-ktx:${fragmentKtxVersion}")
    implementation("androidx.core:core-ktx:${coreKtxVersion}")

    // Glide
    implementation("com.github.bumptech.glide:glide:${glideVersion}")
    kapt("com.github.bumptech.glide:compiler:${glideVersion}")

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:${firebaseBomVersion}")
    implementation("com.google.firebase:firebase-auth-ktx")
    implementation("com.google.firebase:firebase-analytics")
    implementation("com.google.firebase:firebase-crashlytics")

    // FaceBook
    implementation("com.facebook.android:facebook-android-sdk:${facebookVersion}")
}